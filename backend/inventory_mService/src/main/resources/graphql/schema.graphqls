type Query {
  getById(id: ID!): Inventory
  getByAccount(accountId: ID!): [Inventory]
  getByNameAndAccount:(invName: String!, accountId: ID!): Inventory
  searchProductsInInventories(
    name: String, 
    brand: String, 
    model: String, 
    categories: [String], 
    accountId: ID!
  ): [Inventory]
}

type Mutation {
  create(name: String!, accountId: ID!): Inventory
  edit(invId: ID!, name: String!): String
  delete(id: ID!): Boolean

  addUser(user: UserInputFromUSERS_MS!, invId: ID!): Boolean

  addProduct(product: ProductInput!, invId: ID!): ProductInInventory
  copyProducts(products: [ProductToCopyInput]!, idTo: ID!): String
  editStockOfProduct(relativeNewStock: Int!, productRefId: ID!, invId: ID!): String
}


type Inventory {
  id: ID
  name: String!
  accountId: ID
  usersIds: [ID]
  products: [ProductInInventory]
}

type ProductInInventory {
  refId: ID
  name: String!
  brand: String
  model: String
  description: String
  unitPrice: Int
  categories: [String]
  stock: Int
  isAvailable: Boolean
}


input ProductInput {
  name: String!
  brand: String!
  model: String
  description: String
  unitPrice: Int!
  categories: [String]!
  stock: Int!
}

input ProductToCopyInput {
  id: ID!
  stock: Int!
}

input UserInputFromUSERS_MS {
  id: ID!
  name: String!
  role: String!
  inventoryPerms: [PermissionInput]!
}

input PermissionInput {
  id: ID!
  permissions: [String]!
  idOfInventoryReferenced: ID!
}